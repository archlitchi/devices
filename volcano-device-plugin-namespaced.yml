# Copyright (c) 2019, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: volcano-vgpu-device-plugin
  namespace: volcano-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-vgpu-device-plugin
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["nodes/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-vgpu-device-plugin
subjects:
  - kind: ServiceAccount
    name: volcano-vgpu-device-plugin
    namespace: volcano-system
roleRef:
  kind: ClusterRole
  name: volcano-vgpu-device-plugin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: volcano-vgpu-device-plugin
  namespace: volcano-system
spec:
  selector:
    matchLabels:
      name: volcano-vgpu-device-plugin
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      # This annotation is deprecated. Kept here for backward compatibility
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        name: volcano-vgpu-device-plugin
    spec:
      tolerations:
      # This toleration is deprecated. Kept here for backward compatibility
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      - key: CriticalAddonsOnly
        operator: Exists
      - key: volcano.sh/vgpu-memory
        operator: Exists
        effect: NoSchedule
      # Mark this pod as a critical add-on; when enabled, the critical add-on
      # scheduler reserves resources for critical add-on pods so that they can
      # be rescheduled after a failure.
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      priorityClassName: "system-node-critical"
      serviceAccount: volcano-vgpu-device-plugin
      containers:
      - image: m7-ieg-pico-test01:5000/volcano-k8s-device-plugin-cmd:latest
        name: volcano-vgpu-device-plugin
        imagePullPolicy: "IfNotPresent"
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh","-c","mv /hostbin/nvidia-container-runtime /hostbin/nvidia-container-runtime-4pdbackup;cp /k8s-vgpu/bin/nvidia-container-runtime /hostbin/;cp -f /k8s-vgpu/lib/* /usr/local/vgpu/"]
        command: ["sleep","infinity"]
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
          - name: device-plugin
            mountPath: /var/lib/kubelet/device-plugins
          - name: sock
            mountPath: /var/lib/vgpu
          - name: lib
            mountPath: /usr/local/vgpu
          - name: hostusrbinfolder
            mountPath: /hostbin
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
        - name: sock
          hostPath:
            path: /var/lib/vgpu
        - name: lib
          hostPath:
            path: /usr/local/vgpu
            #path: {{ .Values.devicePlugin.libPath }}
        - name: hostusrbinfolder
          hostPath:
            path: /usr/bin